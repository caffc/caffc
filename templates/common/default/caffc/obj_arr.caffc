module caffc

// FIXME: this should use tags
_caffc_obj_arr_size(i32 size) -> i32 {
  i32 result

  native {
    result = sizeof(caffc_ptr) * size + sizeof(caffc_obj_arr);
  }

  return result
}

/**
 * Class that contains a bunch of objects. This is managed by the
 * garbage collector, including the references it contains.
 *
 * This is the only array class in the runtime, the other ones are
 * regular objects.
 */
#caffc_array("caffc_ptr") #caffc_object_array
#public class obj_arr<T> {
    i32 _caffc_array_size

    #public constructor(i32 size) {
        // info for the GC, how many fields are in this array
        native {
            _this->_caffc_array_size = size;
        }
    }

    #public set(i32 index, T value) {
        native {
            _this->_caffc_data[index] = (caffc_obj*) value;
        }
    }

    #public get(i32 index) -> T {
        T result

        native {
            result = _this->_caffc_data[index];
        }

        return result
    }

    #public size() -> i32 {
        return _this._caffc_array_size
    }
}
