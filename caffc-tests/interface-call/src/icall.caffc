module main

native {
  #include <stdio.h>
}

interface I {
  x() -> str
}

class A implements I {
  x() -> str {
    return "A"
  }
}

class B implements I {
  x() -> str {
    return "B"
  }
}

main() {
  I a = new A()
  I b = new B()

  print(a.x())
  print(b.x())

  a = b

  print(a.x())
  print(b.x())
}

print(str what) {
  native {
    printf("%s\n", what->_caffc_data);
  }
}

native {
  int main(int argc, char** argv) {
    atexit(caffc_done);
    caffc_init();

    main_main();

    return 0;
  }
}
