module main

native {
#include <stdio.h>
}

class A {
  u32 index

  constructor(u32 index) {
    _this.index = index
  }
}

class B {
  A a1, a2, a3
}

createA(u32 index) -> A {
  return new A(index)
}

callGc() {
  native {
    caffc_gc_perform();
  }
}

main() {
  A a = createA(3)
  B b = new B()

  A[] arr = new A[10000]

  b.a1 = createA(1)
  b.a2 = createA(2)
  b.a3 = a

  for u32 i = 0; i < arr.size(); i += 1 {
    arr[i] = createA(i)
  }

  callGc()
  for u32 i = 0; i < 1000000; i = i + 1 {
    createA(i)
  }

  print(a)
}

print(A a) {
  native {
    printf("%u\n", a->index);
  }
}